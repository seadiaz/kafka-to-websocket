apiVersion: v1
kind: Namespace
metadata:
  name: k2w
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: k2w
  labels:
    app: zookeeper
spec:
  ports:
    - port: 2181
      name: client
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: k2w
spec:
  selector:
    matchLabels:
      app: zookeeper
  serviceName: zookeeper
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          imagePullPolicy: Always
          image: zookeeper:3.4
          command:
            - sh
            - -exc
            - |
              export ORDINAL=${HOSTNAME##*-} && \
              export ZOO_MY_ID="$((${ORDINAL:-0} + 1))" && \
              exec /docker-entrypoint.sh zkServer.sh start-foreground
          ports:
            - containerPort: 2181
              name: client
          env:
            - name: ZOO_AUTOPURGE_PURGEINTERVAL
              value: '1'
          volumeMounts:
            - name: datadir
              mountPath: /var/lib/zookeeper
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 200Mi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: k2w
  labels:
    app: kafka
spec:
  ports:
    - port: 9092
      name: server
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: k2w
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka
    spec:
      terminationGracePeriodSeconds: 300
      containers:
        - name: kafka
          imagePullPolicy: Always
          image: confluentinc/cp-kafka:5.3.2
          command:
            - sh
            - -exc
            - |
              unset KAFKA_PORT && \
              export KAFKA_BROKER_ID=${HOSTNAME##*-} && \
              exec /etc/confluent/docker/run
          ports:
            - containerPort: 9092
              name: server
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: 'PLAINTEXT://localhost:9092'
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: 'zookeeper:2181'
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: '1'
            - name: KAFKA_OPTS
              value: '-Dlogging.level=INFO -Xms256m'
            - name: KAFKA_JMX_PORT
              value: '5555'
          volumeMounts:
            - name: datadir
              mountPath: /var/lib/kafka
          resources:
            limits:
              memory: 512Mi
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 200Mi
